install.packages("httr")
install.packages("jsonlite")
knitr::opts_chunk$set(echo = TRUE)
iowa_url <- "https://int.nyt.com/applications/elections/2020/data/api/2020-02-03/iowa/president/democrat.json"
iowa_votes_json <- fromJSON(iowa_url)
install.packages("jsonlite")
library(tidyverse)
library(httr)
library(jsonlite)
iowa_url <- "https://int.nyt.com/applications/elections/2020/data/api/2020-02-03/iowa/president/democrat.json"
iowa_votes_json <- fromJSON(iowa_url)
## Converting JSON into usable dataframe:
iowa_counties <- iowa_votes_json$data$races$counties[[1]]
iowa_counties_all <- bind_cols(select(iowa_counties, name), iowa_counties$results)
head(iowa_counties_all)
head(iowa_counties_all)
iowa_counties_long <- iowa_counties_all %>%
# -name excepts "name" column from the "lengthening" (you can also tell it what to include)
pivot_longer(cols = c(-name), names_to = "candidate", values_to = "votes")
head(iowa_counties_long, n=20)
iowa_counties_agg <- iowa_counties_long %>%
group_by(candidate) %>%
summarize(total_sdes = sum(votes)) %>%
arrange(desc(total_sdes))
head(iowa_counties_agg, n=15)
iowa_counties_wide <- iowa_counties_long %>%
pivot_wider(id_cols = name, names_from = candidate, values_from = votes)
head(iowa_counties_wide)
nh_url <- "https://int.nyt.com/applications/elections/2020/data/api/2020-02-11/new-hampshire/president/democrat.json"
nh_votes_json <- fromJSON(nh_url)
nh_counties <- nh_votes_json$data$races$counties[[1]]
nh_counties_all <- bind_cols(select(nh_counties, name, fips), nh_counties$results)
head(nh_counties_all)
nh_counties_long <- nh_counties_all %>%
pivot_longer(cols = c(-name, -fips), names_to = "candidate", values_to = "votes")
head(nh_counties_long
)
nh_counties_agg <- nh_counties_long %>%
group_by(candidate) %>%
summarize(total_votes = sum(votes)) %>%
arrange(desc(total_votes))
glimpse(nh_counties_agg)
```
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(httr)
library(jsonlite)
api_url <- "https://educationdata.urban.org/api/v1/college-university/ipeds/enrollment-full-time-equivalent/2016/Graduate/"
ed_json <- GET(url = api_url,
user_agent("Brookings Researcher (chaldeman@brookings.edu)"))
http_status(ed_json)
ed_json <- content(ed_json, type = "text")
ed_json <- fromJSON(ed_json)
ed_json
View(ed_json)
ed_json[["results"]]
ed_data <- ed_json[["results"]]
ed_data
api_url <- "https://educationdata.urban.org/api/v1/college-university/ipeds/enrollment-full-time-equivalent/2016/Graduate/?fips=11"
ed_json <- GET(url = api_url,
user_agent("Brookings Researcher (chaldeman@brookings.edu)"))
http_status(ed_json)
ed_json <- content(ed_json, type = "text")
ed_json <- fromJSON(ed_json)
ed_data <- ed_json[["results"]]
ed_data
